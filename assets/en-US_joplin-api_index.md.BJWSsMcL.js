import{_ as i,c as s,o as a,a3 as t}from"./chunks/framework.B_ffL0ip.js";const E=JSON.parse('{"title":"Joplin API","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/joplin-api/index.md","filePath":"en-US/joplin-api/index.md"}'),e={name:"en-US/joplin-api/index.md"},n=t(`<h1 id="joplin-api" tabindex="-1">Joplin API <a class="header-anchor" href="#joplin-api" aria-label="Permalink to &quot;Joplin API&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>TypeScript encapsulation of the Joplin data API for use in both plugins and standalone applications.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { joplinDataApi } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;joplin-api&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> joplinDataApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rest&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  baseUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://127.0.0.1:27583&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  token: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;***&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or in plugin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> joplinDataApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;plugin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.note.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res)</span></span></code></pre></div><blockquote><p>For more examples, refer to: <a href="https://github.com/rxliuli/joplin-utils/tree/master/packages/joplin-api/src/api/__tests__" target="_blank" rel="noreferrer">https://github.com/rxliuli/joplin-utils/tree/master/packages/joplin-api/src/api/__tests__</a></p></blockquote><h2 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">​</a></h2><table><thead><tr><th>Object</th><th>Description</th></tr></thead><tbody><tr><td><code>api.event</code></td><td>Event-related API, such as getting note modification history</td></tr><tr><td><code>api.folder</code></td><td>Folder-related API, such as getting the directory tree</td></tr><tr><td><code>api.folderExt</code></td><td>Folder extension API, such as moving directories</td></tr><tr><td><code>api.joplin</code></td><td>Basic Joplin API, such as checking if Joplin web service is open</td></tr><tr><td><code>api.noteAction</code></td><td>Note action related API, such as opening notes in an external editor</td></tr><tr><td><code>api.note</code></td><td>Note-related API, such as getting note content</td></tr><tr><td><code>api.noteExt</code></td><td>Note extension API, such as renaming notes</td></tr><tr><td><code>api.resourceAction</code></td><td>Resource action API, such as opening resources in an external editor</td></tr><tr><td><code>api.resource</code></td><td>Resource-related API, such as uploading images</td></tr><tr><td><code>api.search</code></td><td>Search-related API</td></tr><tr><td><code>api.tag</code></td><td>Tag-related API, such as modifying note tags</td></tr><tr><td><code>PageUtil</code></td><td>Static utility class for pagination, such as getting a full list of notes</td></tr></tbody></table><blockquote><p><a href="https://joplin-utils.rxliuli.com/api/joplin-api/" target="_blank" rel="noreferrer">API Documentation</a></p></blockquote>`,9),l=[n];function p(r,h,o,d,k,c){return a(),s("div",null,l)}const u=i(e,[["render",p]]);export{E as __pageData,u as default};
