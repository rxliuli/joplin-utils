import{_ as i,c as s,o as a,a3 as t}from"./chunks/framework.B_ffL0ip.js";const g=JSON.parse('{"title":"Joplin API","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/joplin-api/index.md","filePath":"zh-CN/joplin-api/index.md"}'),n={name:"zh-CN/joplin-api/index.md"},p=t(`<h1 id="joplin-api" tabindex="-1">Joplin API <a class="header-anchor" href="#joplin-api" aria-label="Permalink to &quot;Joplin API&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>Joplin data API 的 TypeScript 封装，在插件和独立应用中同构使用 Joplin data API。</p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { joplinDataApi } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;joplin-api&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> joplinDataApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rest&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  baseUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://127.0.0.1:27583&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  token: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;***&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or in plugin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> joplinDataApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;plugin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> api.note.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res)</span></span></code></pre></div><blockquote><p>更多示例参考: <a href="https://github.com/rxliuli/joplin-utils/tree/master/packages/joplin-api/src/api/__tests__" target="_blank" rel="noreferrer">https://github.com/rxliuli/joplin-utils/tree/master/packages/joplin-api/src/api/__tests__</a></p></blockquote><h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><table><thead><tr><th>对象</th><th>描述</th></tr></thead><tbody><tr><td><code>api.event</code></td><td>事件相关的 api，例如获取笔记修改历史</td></tr><tr><td><code>api.folder</code></td><td>目录相关 api，例如获取目录树</td></tr><tr><td><code>api.folderExt</code></td><td>目录扩展 api，例如移动目录</td></tr><tr><td><code>api.joplin</code></td><td>joplin 基础 api，例如检查 joplin web 服务是否打开</td></tr><tr><td><code>api.noteAction</code></td><td>笔记相关动作 api，例如在外部编辑器打开笔记</td></tr><tr><td><code>api.note</code></td><td>笔记相关 api，例如获取笔记的内容</td></tr><tr><td><code>api.noteExt</code></td><td>笔记扩展 api，例如重命名</td></tr><tr><td><code>api.resourceAction</code></td><td>资源动作 api，例如在外部编辑器打开附件资源</td></tr><tr><td><code>api.resource</code></td><td>资源相关 api，例如上传图片</td></tr><tr><td><code>api.search</code></td><td>搜索相关 api</td></tr><tr><td><code>api.tag</code></td><td>标签相关 api，例如修改笔记的标签</td></tr><tr><td><code>PageUtil</code></td><td>分页相关的静态工具类，例如获取全量笔记列表</td></tr></tbody></table><blockquote><p><a href="https://joplin-utils.rxliuli.com/api/joplin-api/" target="_blank" rel="noreferrer">API 文档</a></p></blockquote>`,9),e=[p];function l(h,d,r,k,o,c){return a(),s("div",null,e)}const y=i(n,[["render",l]]);export{g as __pageData,y as default};
