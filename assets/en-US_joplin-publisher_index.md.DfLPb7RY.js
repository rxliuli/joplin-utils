import{_ as e,a as t,b as i,c as o,d as a,e as n,f as r,g as l,h as s,i as u,j as p}from"./chunks/joplin-publisher-hexo-setting-2.BCULvktT.js";import{_ as h,c,o as d,a3 as g}from"./chunks/framework.B_ffL0ip.js";const S=JSON.parse('{"title":"Joplin Publisher","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/joplin-publisher/index.md","filePath":"en-US/joplin-publisher/index.md"}'),m={name:"en-US/joplin-publisher/index.md"},b=g('<h1 id="joplin-publisher" tabindex="-1">Joplin Publisher <a class="header-anchor" href="#joplin-publisher" aria-label="Permalink to &quot;Joplin Publisher&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>Publish Joplin notes to GitHub, and automate the build and deployment process using GitHub Actions.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="github" tabindex="-1">GitHub <a class="header-anchor" href="#github" aria-label="Permalink to &quot;GitHub&quot;">​</a></h3><ol><li>If you haven&#39;t already, <a href="https://github.com/signup" target="_blank" rel="noreferrer">sign up</a> for a GitHub account.</li><li>Use the template project <a href="https://github.com/joplin-utils/joplin-blog-template" target="_blank" rel="noreferrer">joplin-blog-template</a> to create a new repository named <code>&lt;github username&gt;.github.io</code><img src="'+e+'" alt="create 1"><img src="'+t+'" alt="create 2"><img src="'+i+'" alt="create 3"></li><li>Navigate to Settings &gt; Pages &gt; Build and deployment, and select GitHub Actions <img src="'+o+'" alt="setting 1"></li><li><a href="https://github.com/settings/personal-access-tokens/new" target="_blank" rel="noreferrer">Create</a> a GitHub token, selecting at least the content and <code>&lt;github username&gt;.github.io</code> repository permissions. Copy the token after creation. <img src="'+a+'" alt="setting 2"></li></ol><h3 id="joplin" tabindex="-1">Joplin <a class="header-anchor" href="#joplin" aria-label="Permalink to &quot;Joplin&quot;">​</a></h3><ol><li>Install the plugin, <a href="https://joplinapp.org/plugins/plugin/rxliuli.joplin-publisher/" target="_blank" rel="noreferrer">https://joplinapp.org/plugins/plugin/rxliuli.joplin-publisher/</a></li><li>Open Joplin &gt; Settings &gt; Plugins &gt; Publisher, and set GitHub token/username/repo <img src="'+n+'" alt="setting 1"></li><li>Choose a note and add the tag <strong>blog</strong><img src="'+r+'" alt="setting 2"></li><li>Click Tools &gt; Publish to GitHub to publish <img src="'+l+'" alt="publish 1"></li></ol><p>Wait for a couple of minutes, then you can visit <code>&lt;github username&gt;.github.io</code> to see your published notes.</p><p><img src="'+s+'" alt="blog"></p><p>You can continue to add the blog tag to notes you wish to publish, then run <strong>Publish to GitHub</strong> again, which will update the notes on the website.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>Since Hexo is used for rendering, you can configure it in the created GitHub repository. The theme currently used is Fluid, and you can modify the corresponding theme settings.</p><p>For example, if you want to change the site&#39;s title, you can modify <code>title</code> in <code>_config.yml</code></p><p><img src="'+u+'" alt="hexo-setting-1"></p><p>To update the background image of the homepage, you can modify <code>index.banner_img</code> in <code>_config.fluid.yml</code></p><p><img src="'+p+'" alt="hexo-setting-2"></p><p>References</p><ul><li>Hexo documentation: <a href="https://hexo.io/" target="_blank" rel="noreferrer">https://hexo.io/</a></li><li>Fluid theme documentation: <a href="https://hexo.fluid-dev.com/docs/en/guide/" target="_blank" rel="noreferrer">https://hexo.fluid-dev.com/docs/en/guide/</a></li></ul>',19),_=[b];function f(x,y,k,P,j,H){return d(),c("div",null,_)}const T=h(m,[["render",f]]);export{S as __pageData,T as default};
