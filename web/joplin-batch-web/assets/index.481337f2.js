import{aO as k,aP as h,ax as x,z as i,r as t,aA as f,x as r}from"./index.f1f5c4e7.js";import{C as u}from"./index.36ffe889.js";import{B as c}from"./button.0bd9609f.js";import{L as l}from"./index.06e4778b.js";import{T as y}from"./index.8e8f2a9f.js";import"./row.a3185991.js";import"./TextArea.7d7e2c6d.js";class C{async check(){const a=new Set(k(await h.listAll(),{id:"id",path:"path",children:"children"}).map(o=>o.id));return(await x.pageToAllList(i.list.bind(i),{fields:["id","title","parent_id"],order_by:"user_updated_time",order_dir:"DESC"})).filter(o=>!a.has(o.parent_id))}}const E=new C,_=()=>{const[n,a]=t.exports.useState([]),[s,o]=f(async()=>{const e=await E.check();console.log("list: ",e),a(e)});async function m(e){await i.remove(e),a(p=>p.filter(d=>d.id!==e))}return t.exports.createElement(u,{title:r.t("checkParentNotebook.title"),extra:t.exports.createElement(c,{loading:s.loading,onClick:o},r.t("common.action.check"))},t.exports.createElement(l,{dataSource:n,locale:{emptyText:r.t("checkParentNotebook.listEmptyText")},renderItem:e=>t.exports.createElement(l.Item,{id:e.id,extra:t.exports.createElement(c,{onClick:()=>m(e.id)},r.t("common.action.remove"))},t.exports.createElement(y.Text,null,e.title))}))};export{_ as default};
