/**
 * @remix-run/router v1.0.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */var d;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(d||(d={}));function x(e){let t={};if(e){let r=e.indexOf("#");r>=0&&(t.hash=e.substr(r),e=e.substr(0,r));let n=e.indexOf("?");n>=0&&(t.search=e.substr(n),e=e.substr(0,n)),e&&(t.pathname=e)}return t}var m;(function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"})(m||(m={}));function M(e,t,r){r===void 0&&(r="/");let n=typeof t=="string"?x(t):t,i=j(n.pathname||"/",r);if(i==null)return null;let s=v(e);R(s);let a=null;for(let l=0;a==null&&l<s.length;++l)a=L(s[l],i);return a}function v(e,t,r,n){return t===void 0&&(t=[]),r===void 0&&(r=[]),n===void 0&&(n=""),e.forEach((i,s)=>{let a={relativePath:i.path||"",caseSensitive:i.caseSensitive===!0,childrenIndex:s,route:i};a.relativePath.startsWith("/")&&(g(a.relativePath.startsWith(n),'Absolute route path "'+a.relativePath+'" nested under path '+('"'+n+'" is not valid. An absolute child route path ')+"must start with the combined path of all its parent routes."),a.relativePath=a.relativePath.slice(n.length));let l=f([n,a.relativePath]),c=r.concat(a);i.children&&i.children.length>0&&(g(i.index!==!0,"Index routes must not have child routes. Please remove "+('all child routes from route path "'+l+'".')),v(i.children,t,c,l)),!(i.path==null&&!i.index)&&t.push({path:l,score:W(l,i.index),routesMeta:c})}),t}function R(e){e.sort((t,r)=>t.score!==r.score?r.score-t.score:C(t.routesMeta.map(n=>n.childrenIndex),r.routesMeta.map(n=>n.childrenIndex)))}const $=/^:\w+$/,S=3,y=2,I=1,B=10,E=-2,p=e=>e==="*";function W(e,t){let r=e.split("/"),n=r.length;return r.some(p)&&(n+=E),t&&(n+=y),r.filter(i=>!p(i)).reduce((i,s)=>i+($.test(s)?S:s===""?I:B),n)}function C(e,t){return e.length===t.length&&e.slice(0,-1).every((n,i)=>n===t[i])?e[e.length-1]-t[t.length-1]:0}function L(e,t){let{routesMeta:r}=e,n={},i="/",s=[];for(let a=0;a<r.length;++a){let l=r[a],c=a===r.length-1,u=i==="/"?t:t.slice(i.length)||"/",o=U({path:l.relativePath,caseSensitive:l.caseSensitive,end:c},u);if(!o)return null;Object.assign(n,o.params);let h=l.route;s.push({params:n,pathname:f([i,o.pathname]),pathnameBase:O(f([i,o.pathnameBase])),route:h}),o.pathnameBase!=="/"&&(i=f([i,o.pathnameBase]))}return s}function U(e,t){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[r,n]=V(e.path,e.caseSensitive,e.end),i=t.match(r);if(!i)return null;let s=i[0],a=s.replace(/(.)\/+$/,"$1"),l=i.slice(1);return{params:n.reduce((u,o,h)=>{if(o==="*"){let w=l[h]||"";a=s.slice(0,s.length-w.length).replace(/(.)\/+$/,"$1")}return u[o]=b(l[h]||"",o),u},{}),pathname:s,pathnameBase:a,pattern:e}}function V(e,t,r){t===void 0&&(t=!1),r===void 0&&(r=!0),P(e==="*"||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were '+('"'+e.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+e.replace(/\*$/,"/*")+'".'));let n=[],i="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,(a,l)=>(n.push(l),"([^\\/]+)"));return e.endsWith("*")?(n.push("*"),i+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):i+=r?"\\/*$":"(?:(?=[@.~-]|%[0-9A-F]{2})|\\b|\\/|$)",[new RegExp(i,t?void 0:"i"),n]}function b(e,t){try{return decodeURIComponent(e)}catch(r){return P(!1,'The value for the URL param "'+t+'" will not be decoded because'+(' the string "'+e+'" is a malformed URL segment. This is probably')+(" due to a bad percent encoding ("+r+").")),e}}function j(e,t){if(t==="/")return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let r=t.endsWith("/")?t.length-1:t.length,n=e.charAt(r);return n&&n!=="/"?null:e.slice(r)||"/"}function g(e,t){if(e===!1||e===null||typeof e>"u")throw new Error(t)}function P(e,t){if(!e){typeof console<"u"&&console.warn(t);try{throw new Error(t)}catch{}}}const f=e=>e.join("/").replace(/\/\/+/g,"/"),O=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/");class A{constructor(t,r,n){this.status=t,this.statusText=r||"",this.data=n}}function T(e){return e instanceof A}export{d as A,T as a,g as i,f as j,M as m,x as p,j as s};
